/*
	This file is part of cpp-elementrem.
	cpp-elementrem is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	cpp-elementrem is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	You should have received a copy of the GNU General Public License
	along with cpp-elementrem.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file PackagingStep.qml
 * @
 * 
 * 
 * Elementrem IDE client.
 */

import QtQuick 2.0
import QtQuick.Layouts 1.0
import QtQuick.Controls 1.1
import QtQuick.Controls.Styles 1.3
import QtQuick.Dialogs 1.1
import Qt.labs.settings 1.0
import "js/TransactionHelper.js" as TransactionHelper
import "js/NetworkDeployment.js" as NetworkDeploymentCode
import "js/QElementHelper.js" as QElementHelper

Rectangle {
	property variant paramsModel: []
	property variant worker
	color: "#E3E3E3E3"
	anchors.fill: parent
	id: root
	property alias localPackageUrl: localPackageUrl.originalText
	property alias lastPackageDate: lastPackageLabel.text
	property string deploymentId
	property string packageDir
	property string folderName: "package"
	signal packaged

	function show()
	{
		visible = true
	}

	QFileDialog {
		id: ressourcesFolder
		visible: false
		title: qsTr("Please choose a path")
		selectFolder: true
		selectExisting: true
		property variant target
		onVisibilityChanged:
		{
			if (visible)
				setFolder(target.text)

		}
		onAccepted: {
			var u = ressourcesFolder.fileUrl.toString();
			if (u.indexOf("file://") == 0)
				u = u.substring(7, u.length)
			if (Qt.platform.os == "windows" && u.indexOf("/") == 0)
				u = u.substring(1, u.length);
			target.text = u;
		}
	}

	ColumnLayout
	{
		anchors.top: parent.top
		anchors.topMargin: 10
		width: parent.width
		id: col
		spacing: 20
		anchors.left: parent.left
		anchors.leftMargin: 10

		DefaultLabel
		{
			anchors.top: parent.top
			Layout.fillWidth: true
			text: qsTr("Upload and update your Dapp assets.\n This step will copy all your project assets in the \"www\" folder.\n - Contract addresses generated by the last deployment will be inserted (deployment.js). \n - The Manifest file will allow to deploy assets in a decentralized service.")
			font.bold: true
		}

		RowLayout
		{
			Layout.fillWidth: true
			Layout.minimumHeight: 20
			Rectangle
			{
				Layout.preferredWidth: col.width / 5
				anchors.verticalCenter: parent.verticalCenter
				DefaultLabel
				{
					text: qsTr("Save packaged dapp to")
					anchors.left: parent.left
					anchors.verticalCenter: parent.verticalCenter
				}
			}

			DisableInput
			{
				anchors.verticalCenter: parent.verticalCenter
				id: packageFolder
				visible: true
				Layout.preferredWidth: 360
				text: projectPath + "/" + deploymentDialog.packageStep.folderName

				DefaultButton
				{
					id: generatePackageBtn
					anchors.verticalCenter: parent.verticalCenter
					text: qsTr("Generate Package")
					anchors.left: parent.right
					anchors.leftMargin: 50
					onClicked:
					{
						messageDialogPackage.open()
					}
				}
			}

			MessageDialog
			{
				id: messageDialogPackage
				title: qsTr("Package")
				text: qsTr("This will erase the previous package (\"www\" folder) if any. Are you sure you want to continue?")
				standardButtons: StandardButton.Yes | StandardButton.No
				onYes: {
					NetworkDeploymentCode.packageDapp(projectModel.deploymentAddresses);
					projectModel.saveProject()
					root.packaged()
				}
			}
		}

		RowLayout
		{
			Layout.fillWidth: true
			Layout.minimumHeight: 20
			Rectangle
			{
				Layout.preferredWidth: col.width / 5
				anchors.verticalCenter: parent.verticalCenter
				DefaultLabel
				{
					text: qsTr("Local package URL")
					anchors.left: parent.left
					anchors.verticalCenter: parent.verticalCenter
				}
			}

			DisableInput
			{
				anchors.verticalCenter: parent.verticalCenter
				Layout.preferredWidth: 359
				id: localPackageUrl

				DefaultLabel
				{
					anchors.left: parent.right
					anchors.leftMargin: 50
					anchors.verticalCenter: parent.verticalCenter
					id: lastPackageLabel
				}
			}
		}
	}
}










